name: build-workflow

on:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.1'

      - name: Check current directory
        run: ls -la

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run unittests
        run: coverage run -m unittest discover games_theory

      - name: Create coverage report
        run: coverage xml

      - name: Upload coverage report
        if: success()
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l Python -r coverage.xml

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.1'

      - name: Check current directory
        run: ls -la

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Prepare build
        run: zip -r games_theory.zip games_theory

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: games_theory
          path: games_theory.zip

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: games_theory
          path: build

      - name: Check current directory
        run: ls -la

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Get version
        id: get_version
        run: echo "VERSION=$(python games_theory/version_bump.py version)" >> $GITHUB_ENV

      - name: Generate Changelog
        id: changelog
        run: ./games_theory/generate_changelog.sh ${{ env.VERSION }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/games_theory.zip
          tag_name: ${{ env.VERSION }}
          body: ${{ env.CHANGELOG }}

  version_bump:
    needs: publish
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Bump version
        run: python games_theory/version_bump.py bump

      - name: Git config
        run: |
          git config user.email "ci@dude.com"
          git config user.name "CIDude"

      - name: Get version
        id: get_version
        run: echo "VERSION=$(python games_theory/version_bump.py version)" >> $GITHUB_ENV

      - name: Create branch for version bump
        run: |
          BRANCH_NAME="version-bump-${{ env.VERSION }}"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "artifact version bump to ${{ env.VERSION }}"          
          git push -u origin $BRANCH_NAME

      - name: Create PR and enable auto-merge
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH_NAME="version-bump-${{ env.VERSION }}"
          gh pr create --title "Artifact version bump to ${{ env.VERSION }}" \
                      --body "Automated artifact version bump after release ${{ env.VERSION }}" \
                      --base master \
                      --head $BRANCH_NAME \
                      --label "automated,version-bump" \
                      --repo ${{ github.repository }}
          gh pr merge $BRANCH_NAME --auto --merge --repo ${{ github.repository }}
